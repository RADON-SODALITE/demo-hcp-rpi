---
tosca_definitions_version: tosca_simple_yaml_1_3

imports:
  - radon/_definitions/tyIgeneral__Activity.tosca
  - radon/_definitions/tyIgeneral__Entry.tosca
  - radon/_definitions/tyIgeneral__Event.tosca
  - radon/_definitions/tyIgeneral__Interaction.tosca
  - radon/_definitions/tyIgeneral__Precedence.tosca
  - radon/_definitions/tyIgeneral__RandomVariable.tosca
  - radon/_definitions/radonartifacts__Ansible.tosca
  - radon/_definitions/radoncapabilities__Invocable.tosca
  - radon/_definitions/radonnodesabstract__ApiGateway.tosca
  - radon/_definitions/radonnodesabstract__CloudPlatform.tosca
  - radon/_definitions/radonnodesabstract__Database.tosca
  - radon/_definitions/radonnodesabstract__Function.tosca
  - radon/_definitions/radonnodesabstract__ObjectStorage.tosca
  - radon/_definitions/radonnodesminio__MinIOBucket.tosca
  - radon/_definitions/radonnodesrpi__RPiFunction.tosca
  - radon/_definitions/radonnodesrpi__RPiPlatform.tosca
  - radon/_definitions/radonrelationships__ConnectsTo.tosca
  - radon/_definitions/radonrelationships__Triggers.tosca
  - radon/_definitions/radonrelationshipsrpi__RPiTriggers.tosca


topology_template:
  inputs:
    hostname:
      type: string
    minio_user:
      type: string
    minio_pass:
      type: string
    bucket_in_:
      type: string
    bucket_out:
      type: string
    image_name:
      type: string
    function_name:
      type: string

  node_templates:
    MinIOBucket_1:
      type: radon.nodes.minio.MinIOBucket
      metadata:
        x: "303"
        y: "302"
        displayName: "SourceBucket"
      properties:
        size: "0 MB"
        bucket_name: { get_input: bucket_in }
        name: "SourceBucket"
      requirements:
        - host:
            node: RPiPlatform_0
            relationship: con_HostedOn_1
            capability: host
        - invoker:
            node: RPiFunction_0
            relationship: con_RPiTriggers_0
            capability: invocable
    MinIOBucket_2:
      type: radon.nodes.minio.MinIOBucket
      metadata:
        x: "924"
        y: "289"
        displayName: "TargetBucket"
      properties:
        size: "0 MB"
        bucket_name: { get_input: bucket_out }
        name: "TargetBucket"
      requirements:
        - host:
            node: RPiPlatform_0
            relationship: con_HostedOn_2
            capability: host
    RPiFunction_0:
      type: radon.nodes.rpi.RPiFunction
      metadata:
        x: "602"
        y: "135"
        displayName: "ThumbnailGeneration"
      properties:
        image_name: { get_input: image_name }
        function_name: { get_input: function_name }
      requirements:
        - host:
            node: RPiPlatform_0
            relationship: con_HostedOn_0
            capability: host
        - endpoint:
            node: MinIOBucket_2
            relationship: con_ConnectsTo_0
            capability: storage_endpoint
    RPiPlatform_0:
      type: radon.nodes.rpi.RPiPlatform
      metadata:
        x: "604"
        y: "436"
        displayName: "RPiPlatform"
      properties:
        hostname: { get_input: hostname }
        minio_user: { get_input: minio_user }
        minio_pass: { get_input: minio_pass }
  relationship_templates:
    con_HostedOn_2:
      type: tosca.relationships.HostedOn
    con_HostedOn_0:
      type: tosca.relationships.HostedOn
    con_HostedOn_1:
      type: tosca.relationships.HostedOn
    con_ConnectsTo_0:
      type: radon.relationships.ConnectsTo
    con_RPiTriggers_0:
      type: radon.relationships.rpi.RPiTriggers
      properties:
        events: "s3:ObjectCreated:*"
