---
tosca_definitions_version: tosca_simple_yaml_1_3

node_types:
  radon.nodes.bucket_create:
    derived_from: tosca.nodes.SoftwareComponent
    properties:
      bucket_in_name:
        type: string
        description: The name of incoming the bucket
      bucket_out_name:
        type: string
        description: The name of the bucket with results
      minio_ip:
        type: string
        description: IP address of the MiniIO object storage
      minio_user:
        type: string
        description: MiniIO username
      minio_password:
        type: string
        description: MiniIO password
    attributes:
      bucket_in_name:
        type: string
      bucket_out_name:
        type: string
      minio_ip:
        type: string
      minio_user:
        type: string
      minio_password:
        type: string
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        inputs:
          bucket_in_name: {default: { get_property: [SELF, bucket_in_name] }, type: string }
          bucket_out_name: {default: { get_property: [SELF, bucket_out_name] }, type: string }
          minio_ip: {default: { get_property: [SELF, minio_ip] }, type: string }
          minio_user: {default: { get_property: [SELF, minio_user] }, type: string }
          minio_password: {default: { get_property: [SELF, minio_password] }, type: string }
        operations:
          create:
            implementation: playbooks/bucket-create/create.yml
          delete:
            implementation: playbooks/bucket-create/remove.yml

topology_template:
  inputs:
    master_node_ip:
      type: string
    rpi_username:
      type: string
    rpi_password:
      type: string
    minio_user:
      type: string
    minio_password:
      type: string
    bucket_in_name:
      type: string
    bucket_out_name:
      type: string
    resize_image_name:
      type: string
    resize_function_name:
      type: string

  node_templates:
    my-workstation:
      type: tosca.nodes.Compute
      attributes:
        private_address: { get_input: master_node_ip }
        public_address: { get_input: master_node_ip }

    bucket_create:
      type: radon.nodes.bucket_create
      properties:
        bucket_in_name: { get_input: bucket_in_name }
        bucket_out_name: { get_input: bucket_out_name }
        minio_ip: { get_input: master_node_ip }
        minio_user: { get_input: minio_user }
        minio_password: { get_input: minio_password }
      requirements:
        - host: my-workstation
...