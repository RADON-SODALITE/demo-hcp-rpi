---
- hosts: k3s_rpi_master
  remote_user: pi
  gather_facts: True

  tasks:
    - name: Include deployment variables
      include_vars: ../inputs.yml

    - name: Install arkade and get packages
      shell: "{{ item }}"
      with_items:
        - curl -sSL https://dl.get-arkade.dev | sudo sh
        - arkade get kubectl
        - arkade get k3sup

    - name: Install kubectl and k3s
      shell: "{{ item }}"
      become: True
      with_items:
        - mv /home/pi/.arkade/bin/k3sup /usr/local/bin/
        - mv /home/pi/.arkade/bin/kubectl /usr/local/bin/

    - name: Install k3s
      shell: "{{ item }}"
      with_items:
        - export IP="{{ master_node_ip }}"
        - k3sup install --ip "{{ master_node_ip }}" --user pi
        - export KUBECONFIG=/home/pi/kubeconfig
        - kubectl config set-context default
        - kubectl config view --raw >~/.kube/config
        - arkade install kubernetes-dashboard

    - name: Get token from master
      become: True
      shell: "cat /var/lib/rancher/k3s/server/node-token"
      register: k3s_node_token

- hosts: k3s_rpi_worker
  remote_user: pi
  become: True
  gather_facts: True

  tasks:
    - set_fact:
        k3s_master_host: "{{ groups['k3s_rpi_master'][0] }}"

    - set_fact:
        k3s_master_token: "{{ hostvars[k3s_master_host]['k3s_node_token'].stdout }}"

    - name: Install / upgrade k3s on worker nodes and connect to master
      shell: "curl -sfL https://get.k3s.io | K3S_URL=https://{{ master_node_ip }}:6443 K3S_TOKEN={{ k3s_master_token }} sh -"

- hosts: k3s_rpi_master
  remote_user: pi

  tasks:
    - name: Install OpenFAAS
      become: True
      shell: "arkade install openfaas --kubeconfig /home/pi/kubeconfig"

    - name: Install faas-cli
      shell: "{{ item }}"
      with_items:
        - arkade get faas-cli
        - curl -SLsf https://cli.openfaas.com | sudo sh
        - kubectl port-forward -n openfaas svc/gateway 8080:8080 &

    - name: Login FAAS CLI
      shell: "kubectl get secret -n openfaas basic-auth -o jsonpath='{.data.basic-auth-password}' --kubeconfig /home/pi/kubeconfig | base64 --decode | faas-cli login --username admin --password-stdin"

    - name: Deploy sample function
      shell: "faas-cli store deploy figlet"
